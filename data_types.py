a = 'hi'
b = iter(a)
print(next(b))

"""
Неизменяемые типы данных:

int, float, complex: Это базовые числовые типы в Python. Они неизменяемы и обычно используются для представления математических значений.

str: Строки в Python неизменяемы. Они используются для хранения текстовых данных.

tuple: Кортежи в Python неизменяемы. Они похожи на списки, но не могут быть изменены после создания. Обычно используются для хранения различных типов данных в одном контейнере.

frozenset: Это неизменяемая версия обычного set. Он может использоваться как ключ словаря, тогда как обычный set не может.

bytes: Это неизменяемая версия bytearray. Обычно используется для работы с двоичными данными.

namedtuple: Это функция, которая генерирует подкласс tuple с именованными полями. Namedtuple является неизменяемым.

Изменяемые типы данных:

list: Списки являются одним из самых универсальных типов данных в Python. Они изменяемы, могут содержать разные типы данных и поддерживают множество методов для манипуляций.

dict, defaultdict,  ChainMap: Это словари в Python. defaultdict автоматически назначает стандартное значение новому ключу, OrderedDict сохраняет порядок вставки ключей, ChainMap группирует несколько словарей в одну обновляемую представление.

set: Множества в Python используются для хранения уникальных элементов в неупорядоченной коллекции.

bytearray: Это изменяемый массив байтов. Обычно используется для работы с двоичными данными.

array.array: Это массив, который хранит элементы одного типа. Он более эффективен, чем обычный список для хранения больших объемов данных.

collections.deque: Это двухсторонняя очередь, которая может быть изменена с обоих концов. Она может быть использована как стек или очередь.

collections.Counter: Это словарь, предназначенный для подсчета хешируемых объектов.

struct.Struct: Struct представляет собой структуру C, и обычно используется для работы с бинарными данными.
"""

fs = frozenset([1, 2, 3, 3, 2, 1])  # {1, 2, 3}

print(fs)

import array
a = array.array('i', [1, 2, 3, 4, 5])
print(a)